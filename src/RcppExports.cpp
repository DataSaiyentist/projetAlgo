// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FOCuS
List FOCuS(Rcpp::Function dataGen, const double thres, const double& mu0, std::list<double>& grid, const double& K);
RcppExport SEXP _projetAlgo_FOCuS(SEXP dataGenSEXP, SEXP thresSEXP, SEXP mu0SEXP, SEXP gridSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Function >::type dataGen(dataGenSEXP);
    Rcpp::traits::input_parameter< const double >::type thres(thresSEXP);
    Rcpp::traits::input_parameter< const double& >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< std::list<double>& >::type grid(gridSEXP);
    Rcpp::traits::input_parameter< const double& >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(FOCuS(dataGen, thres, mu0, grid, K));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_projetAlgo_FOCuS", (DL_FUNC) &_projetAlgo_FOCuS, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_projetAlgo(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
